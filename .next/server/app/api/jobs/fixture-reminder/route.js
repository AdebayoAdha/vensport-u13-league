"use strict";(()=>{var e={};e.id=867,e.ids=[867],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},2254:e=>{e.exports=require("node:buffer")},6005:e=>{e.exports=require("node:crypto")},7261:e=>{e.exports=require("node:util")},4553:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>f,originalPathname:()=>m,patchFetch:()=>y,requestAsyncStorage:()=>l,routeModule:()=>g,serverHooks:()=>v,staticGenerationAsyncStorage:()=>w,staticGenerationBailout:()=>h});var s={};r.r(s),r.d(s,{POST:()=>p});var a=r(5419),i=r(9108),n=r(9678),o=r(8070),u=r(7767),c=r(2982);async function d(e){let{fixtureId:t}=await e.json();try{let e=(await c.K.getFixtures()).find(e=>e.id===t);return!e||e.homeScore||e.awayScore||console.log(`Reminder: Match ${e.homeTeam} vs ${e.awayTeam} on ${e.date}`),o.Z.json({success:!0})}catch(e){return o.Z.json({error:"Failed to process reminder"},{status:500})}}let p=(0,u.Vs)(d),g=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/jobs/fixture-reminder/route",pathname:"/api/jobs/fixture-reminder",filename:"route",bundlePath:"app/api/jobs/fixture-reminder/route"},resolvedPagePath:"/Users/Adha/Documents/Some Work/Sport website/my-react-app/app/api/jobs/fixture-reminder/route.ts",nextConfigOutput:"export",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:w,serverHooks:v,headerHooks:f,staticGenerationBailout:h}=g,m="/api/jobs/fixture-reminder/route";function y(){return(0,n.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:w})}},2982:(e,t,r)=>{r.d(t,{K:()=>a});var s=r(4409);class a{static async getTeams(){return await s.kv.get("teams")||[]}static async setTeams(e){await s.kv.set("teams",e)}static async getFixtures(){return await s.kv.get("fixtures")||[]}static async setFixtures(e){await s.kv.set("fixtures",e)}static async getNews(){return await s.kv.get("newsStories")||[]}static async setNews(e){await s.kv.set("newsStories",e)}static async getUsers(){return await s.kv.get("users")||[]}static async setUsers(e){await s.kv.set("users",e)}static async getDefaultRound(){return await s.kv.get("defaultRound")||"1"}static async setDefaultRound(e){await s.kv.set("defaultRound",e)}}},7767:(e,t,r)=>{r.d(t,{Vs:()=>a});var s=r(4424);function a(e,t){let r=t?.currentSigningKey??process.env.QSTASH_CURRENT_SIGNING_KEY;if(!r)throw Error("currentSigningKey is required, either in the config or as env variable QSTASH_CURRENT_SIGNING_KEY");let a=t?.nextSigningKey??process.env.QSTASH_NEXT_SIGNING_KEY;if(!a)throw Error("nextSigningKey is required, either in the config or as env variable QSTASH_NEXT_SIGNING_KEY");let i=new s.nk({currentSigningKey:r,nextSigningKey:a});return async(r,s)=>{let a=r.clone(),n=r.headers.get("upstash-signature");if(!n)return new Response(new TextEncoder().encode("`Upstash-Signature` header is missing"),{status:403});if("string"!=typeof n)throw TypeError("`Upstash-Signature` header is not a string");let o=await a.text();return await i.verify({signature:n,body:o,clockTolerance:t?.clockTolerance})?e(r,s):new Response(new TextEncoder().encode("invalid signature"),{status:403})}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[638,936],()=>r(4553));module.exports=s})();